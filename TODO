                  ********
                 *        *
                 *  TODO  *
                 *        *
                  ********

Doc:
  - manpage and doc for xsltproc

Design:
  - should transforms for a given stylesheet be thread clean,
    or can a stylesheet be enriched with document specific
    informations and cleaned up later ?
  - seems that saving back XSLT stylesheet from a compiled form might
    be a bit ugly ...
    
Import:
  -> parse them
  -> provide functions to circulate in the import tree of stylesheets

Extra functions:
  -> document() should not be a problem since Result Tree Fragments are
     implemented
  => started, incomplete
  -> missing key support

ID and Key support:
  -> Id should be simple, key will probably requires some hash tables.

Templates:
  -> check the built-in template rule for attributes
  -> make sure @xxx matches are applied

Pattern tester:
  -> try to optimize for ID scan and tests.

Pattern scanner:
  -> add error checks on all returns

Error handling:
  -> check the version stuff, design a separate module for error interfacing
     and default handling, parsing vs. runtime, fatal / compat / warning,
     and lack of optionnal features.
  -> catch recursion end of 5.4 ...

Support Attribute value templates:
  -> optimization by checking their existence at stylesheet parse time.

Sorting:
  -> add support for imbricated sorts
  -> add lang and case-order
  -> add foreign sorting functions (interfaces ?).

Validity:
  -> should we add validation by default ? Make this an option
  -> redirrect validity errors

Contextual error reporting:
  -> provide a couple of functions providing context analysis, not urgent

                  ********
                 *        *
                 *  DONE  *
                 *        *
                  ********

Extra functions:
  -> make a separate module.
  => done functions.[ch]

Support Attribute value templates:
  -> starts to be urgent. Design it in flexible ways but try to optimize
     to handle most of it at the stylesheet parse time ...
  => Done for the most part need to check all attributes in XSLT constructs
     using them and use the dedicated readin function.

Separate util module:
  -> macros, config, verbosity ?
  => xsltutils.[ch]

Support for disable-output-escaping="yes":
  -> looks problematic, libxml has no support for anything like this,
     and unless adding a new node type :-( or tweaking text node and
     output routines this is gonna be messy ... must be handled at libxml
     level.
  => Done with a trick, text node name is different, requires > 2.2.11

Pattern scanner:
  -> compute priority
  -> handle unions
  => done

Pattern tester:
  -> also put fast lookup for "text()", "comment()", "node()"
     based patterns lists.
  => done

Doc:
  - put a page at http://xmlsoft.org/XSLT/
  - generate/transform the DocBook to HTML
  - add HTML to package
