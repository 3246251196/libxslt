Design:
  - should transforms for a given stylesheet be thread clean,
    or can a stylesheet be enriched with document specific
    informations and cleaned up later ?
  - seems that saving back XSLT stylesheet from a compiled form might
    be a bit ugly ...
    
Import:
  -> parse them
  -> provide functions to circulate in the import tree of stylesheets

Pattern tester:
  -> try to optimize for ID scan and tests.

Pattern scanner:
  -> add error checks on all returns
  -> handle unions
  -> compute priority

Separate util module:
  -> macros, config, verbosity ?

Support for disable-output-escaping="yes":
  -> looks problematic, libxml has no support for anything like this,
     and unless adding a new node type :-( or tweaking text node and
     output routines this is gonna be messy ... must be handled at libxml
     level.

Error handling:
  -> check the version stuff, design a separate module for error interfacing
     and default handling, parsing vs. runtime, fatal / compat / warning,
     and lack of optionnal features.

Support Attribute value templates:
  -> starts to be urgent. Design it in flexible ways but try to optimize
     to handle most of it at the stylesheet parse time ...
